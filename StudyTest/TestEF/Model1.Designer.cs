//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Model", "fk_behavierID", "behavier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.behavier), "Recomment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Recomment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Book_Category", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Categories), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Books), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Books_Publishers", "Publishers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Publishers), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Books), true)]
[assembly: EdmRelationshipAttribute("Model", "fk_ItemID", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Books), "Recomment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Recomment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_OrderBook_Book", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Books), "OrderBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.OrderBook), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ReaderComment_Book", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Books), "ReaderComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.ReaderComments), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Cart_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Users), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Cart), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_OrderBook_Order", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Orders), "OrderBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.OrderBook), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Order_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Users), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Orders), true)]
[assembly: EdmRelationshipAttribute("Model", "fk_UserID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.Users), "Recomment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Recomment), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Users_Roles", "UserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.UserRoles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Users), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Users_UserStates", "UserStates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestEF.UserStates), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestEF.Users), true)]

#endregion

namespace TestEF
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Entities”部分中的连接字符串初始化新 Entities 对象。
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<behavier> behavier
        {
            get
            {
                if ((_behavier == null))
                {
                    _behavier = base.CreateObjectSet<behavier>("behavier");
                }
                return _behavier;
            }
        }
        private ObjectSet<behavier> _behavier;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Books> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Books>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Books> _Books;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Cart> Cart
        {
            get
            {
                if ((_Cart == null))
                {
                    _Cart = base.CreateObjectSet<Cart>("Cart");
                }
                return _Cart;
            }
        }
        private ObjectSet<Cart> _Cart;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderBook> OrderBook
        {
            get
            {
                if ((_OrderBook == null))
                {
                    _OrderBook = base.CreateObjectSet<OrderBook>("OrderBook");
                }
                return _OrderBook;
            }
        }
        private ObjectSet<OrderBook> _OrderBook;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Orders> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Orders>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Orders> _Orders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Publishers> Publishers
        {
            get
            {
                if ((_Publishers == null))
                {
                    _Publishers = base.CreateObjectSet<Publishers>("Publishers");
                }
                return _Publishers;
            }
        }
        private ObjectSet<Publishers> _Publishers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReaderComments> ReaderComments
        {
            get
            {
                if ((_ReaderComments == null))
                {
                    _ReaderComments = base.CreateObjectSet<ReaderComments>("ReaderComments");
                }
                return _ReaderComments;
            }
        }
        private ObjectSet<ReaderComments> _ReaderComments;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Recomment> Recomment
        {
            get
            {
                if ((_Recomment == null))
                {
                    _Recomment = base.CreateObjectSet<Recomment>("Recomment");
                }
                return _Recomment;
            }
        }
        private ObjectSet<Recomment> _Recomment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SearchKeywords> SearchKeywords
        {
            get
            {
                if ((_SearchKeywords == null))
                {
                    _SearchKeywords = base.CreateObjectSet<SearchKeywords>("SearchKeywords");
                }
                return _SearchKeywords;
            }
        }
        private ObjectSet<SearchKeywords> _SearchKeywords;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserRoles> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRoles>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRoles> _UserRoles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserStates> UserStates
        {
            get
            {
                if ((_UserStates == null))
                {
                    _UserStates = base.CreateObjectSet<UserStates>("UserStates");
                }
                return _UserStates;
            }
        }
        private ObjectSet<UserStates> _UserStates;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 behavier EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTobehavier(behavier behavier)
        {
            base.AddObject("behavier", behavier);
        }
    
        /// <summary>
        /// 用于向 Books EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBooks(Books books)
        {
            base.AddObject("Books", books);
        }
    
        /// <summary>
        /// 用于向 Cart EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCart(Cart cart)
        {
            base.AddObject("Cart", cart);
        }
    
        /// <summary>
        /// 用于向 Categories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// 用于向 OrderBook EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderBook(OrderBook orderBook)
        {
            base.AddObject("OrderBook", orderBook);
        }
    
        /// <summary>
        /// 用于向 Orders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }
    
        /// <summary>
        /// 用于向 Publishers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPublishers(Publishers publishers)
        {
            base.AddObject("Publishers", publishers);
        }
    
        /// <summary>
        /// 用于向 ReaderComments EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReaderComments(ReaderComments readerComments)
        {
            base.AddObject("ReaderComments", readerComments);
        }
    
        /// <summary>
        /// 用于向 Recomment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRecomment(Recomment recomment)
        {
            base.AddObject("Recomment", recomment);
        }
    
        /// <summary>
        /// 用于向 SearchKeywords EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSearchKeywords(SearchKeywords searchKeywords)
        {
            base.AddObject("SearchKeywords", searchKeywords);
        }
    
        /// <summary>
        /// 用于向 UserRoles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserRoles(UserRoles userRoles)
        {
            base.AddObject("UserRoles", userRoles);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// 用于向 UserStates EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserStates(UserStates userStates)
        {
            base.AddObject("UserStates", userStates);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="behavier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class behavier : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 behavier 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="behavierName">behavierName 属性的初始值。</param>
        public static behavier Createbehavier(global::System.Int32 id, global::System.String behavierName)
        {
            behavier behavier = new behavier();
            behavier.Id = id;
            behavier.behavierName = behavierName;
            return behavier;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String behavierName
        {
            get
            {
                return _behavierName;
            }
            set
            {
                OnbehavierNameChanging(value);
                ReportPropertyChanging("behavierName");
                _behavierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("behavierName");
                OnbehavierNameChanged();
            }
        }
        private global::System.String _behavierName;
        partial void OnbehavierNameChanging(global::System.String value);
        partial void OnbehavierNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_behavierID", "Recomment")]
        public EntityCollection<Recomment> Recomment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recomment>("Model.fk_behavierID", "Recomment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recomment>("Model.fk_behavierID", "Recomment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Books")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Books : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Books 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="author">Author 属性的初始值。</param>
        /// <param name="publisherId">PublisherId 属性的初始值。</param>
        /// <param name="publishDate">PublishDate 属性的初始值。</param>
        /// <param name="iSBN">ISBN 属性的初始值。</param>
        /// <param name="wordsCount">WordsCount 属性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 属性的初始值。</param>
        /// <param name="categoryId">CategoryId 属性的初始值。</param>
        /// <param name="clicks">Clicks 属性的初始值。</param>
        public static Books CreateBooks(global::System.Int32 id, global::System.String title, global::System.String author, global::System.Int32 publisherId, global::System.DateTime publishDate, global::System.String iSBN, global::System.Int32 wordsCount, global::System.Decimal unitPrice, global::System.Int32 categoryId, global::System.Int32 clicks)
        {
            Books books = new Books();
            books.Id = id;
            books.Title = title;
            books.Author = author;
            books.PublisherId = publisherId;
            books.PublishDate = publishDate;
            books.ISBN = iSBN;
            books.WordsCount = wordsCount;
            books.UnitPrice = unitPrice;
            books.CategoryId = categoryId;
            books.Clicks = clicks;
            return books;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublisherId
        {
            get
            {
                return _PublisherId;
            }
            set
            {
                OnPublisherIdChanging(value);
                ReportPropertyChanging("PublisherId");
                _PublisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublisherId");
                OnPublisherIdChanged();
            }
        }
        private global::System.Int32 _PublisherId;
        partial void OnPublisherIdChanging(global::System.Int32 value);
        partial void OnPublisherIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private global::System.DateTime _PublishDate;
        partial void OnPublishDateChanging(global::System.DateTime value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordsCount
        {
            get
            {
                return _WordsCount;
            }
            set
            {
                OnWordsCountChanging(value);
                ReportPropertyChanging("WordsCount");
                _WordsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordsCount");
                OnWordsCountChanged();
            }
        }
        private global::System.Int32 _WordsCount;
        partial void OnWordsCountChanging(global::System.Int32 value);
        partial void OnWordsCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentDescription
        {
            get
            {
                return _ContentDescription;
            }
            set
            {
                OnContentDescriptionChanging(value);
                ReportPropertyChanging("ContentDescription");
                _ContentDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentDescription");
                OnContentDescriptionChanged();
            }
        }
        private global::System.String _ContentDescription;
        partial void OnContentDescriptionChanging(global::System.String value);
        partial void OnContentDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AurhorDescription
        {
            get
            {
                return _AurhorDescription;
            }
            set
            {
                OnAurhorDescriptionChanging(value);
                ReportPropertyChanging("AurhorDescription");
                _AurhorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AurhorDescription");
                OnAurhorDescriptionChanged();
            }
        }
        private global::System.String _AurhorDescription;
        partial void OnAurhorDescriptionChanging(global::System.String value);
        partial void OnAurhorDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EditorComment
        {
            get
            {
                return _EditorComment;
            }
            set
            {
                OnEditorCommentChanging(value);
                ReportPropertyChanging("EditorComment");
                _EditorComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EditorComment");
                OnEditorCommentChanged();
            }
        }
        private global::System.String _EditorComment;
        partial void OnEditorCommentChanging(global::System.String value);
        partial void OnEditorCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TOC
        {
            get
            {
                return _TOC;
            }
            set
            {
                OnTOCChanging(value);
                ReportPropertyChanging("TOC");
                _TOC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TOC");
                OnTOCChanged();
            }
        }
        private global::System.String _TOC;
        partial void OnTOCChanging(global::System.String value);
        partial void OnTOCChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommentUser
        {
            get
            {
                return _CommentUser;
            }
            set
            {
                OnCommentUserChanging(value);
                ReportPropertyChanging("CommentUser");
                _CommentUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentUser");
                OnCommentUserChanged();
            }
        }
        private Nullable<global::System.Int32> _CommentUser;
        partial void OnCommentUserChanging(Nullable<global::System.Int32> value);
        partial void OnCommentUserChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Book_Category", "Categories")]
        public Categories Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("Model.FK_Book_Category", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("Model.FK_Book_Category", "Categories").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("Model.FK_Book_Category", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("Model.FK_Book_Category", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Books_Publishers", "Publishers")]
        public Publishers Publishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("Model.FK_Books_Publishers", "Publishers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("Model.FK_Books_Publishers", "Publishers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publishers> PublishersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("Model.FK_Books_Publishers", "Publishers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publishers>("Model.FK_Books_Publishers", "Publishers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_ItemID", "Recomment")]
        public EntityCollection<Recomment> Recomment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recomment>("Model.fk_ItemID", "Recomment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recomment>("Model.fk_ItemID", "Recomment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OrderBook_Book", "OrderBook")]
        public EntityCollection<OrderBook> OrderBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderBook>("Model.FK_OrderBook_Book", "OrderBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderBook>("Model.FK_OrderBook_Book", "OrderBook", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ReaderComment_Book", "ReaderComments")]
        public EntityCollection<ReaderComments> ReaderComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReaderComments>("Model.FK_ReaderComment_Book", "ReaderComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReaderComments>("Model.FK_ReaderComment_Book", "ReaderComments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Cart 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="count">Count 属性的初始值。</param>
        /// <param name="price">Price 属性的初始值。</param>
        public static Cart CreateCart(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 bookId, global::System.Int32 count, global::System.Decimal price)
        {
            Cart cart = new Cart();
            cart.Id = id;
            cart.UserId = userId;
            cart.BookId = bookId;
            cart.Count = count;
            cart.Price = price;
            return cart;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Cart_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Cart_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Cart_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Cart_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("Model.FK_Cart_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Categories 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Categories CreateCategories(global::System.Int32 id, global::System.String name)
        {
            Categories categories = new Categories();
            categories.Id = id;
            categories.Name = name;
            return categories;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Book_Category", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("Model.FK_Book_Category", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("Model.FK_Book_Category", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OrderBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderBook : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderBook 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="orderID">OrderID 属性的初始值。</param>
        /// <param name="bookID">BookID 属性的初始值。</param>
        /// <param name="quantity">Quantity 属性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 属性的初始值。</param>
        public static OrderBook CreateOrderBook(global::System.Int32 id, global::System.Int32 orderID, global::System.Int32 bookID, global::System.Int32 quantity, global::System.Decimal unitPrice)
        {
            OrderBook orderBook = new OrderBook();
            orderBook.Id = id;
            orderBook.OrderID = orderID;
            orderBook.BookID = bookID;
            orderBook.Quantity = quantity;
            orderBook.UnitPrice = unitPrice;
            return orderBook;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookID
        {
            get
            {
                return _BookID;
            }
            set
            {
                OnBookIDChanging(value);
                ReportPropertyChanging("BookID");
                _BookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookID");
                OnBookIDChanged();
            }
        }
        private global::System.Int32 _BookID;
        partial void OnBookIDChanging(global::System.Int32 value);
        partial void OnBookIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OrderBook_Book", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_OrderBook_Book", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_OrderBook_Book", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_OrderBook_Book", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("Model.FK_OrderBook_Book", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OrderBook_Order", "Orders")]
        public Orders Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("Model.FK_OrderBook_Order", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("Model.FK_OrderBook_Order", "Orders").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orders> OrdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("Model.FK_OrderBook_Order", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Orders>("Model.FK_OrderBook_Order", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orders : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Orders 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="orderDate">OrderDate 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="totalPrice">TotalPrice 属性的初始值。</param>
        /// <param name="state">state 属性的初始值。</param>
        public static Orders CreateOrders(global::System.Int32 id, global::System.DateTime orderDate, global::System.Int32 userId, global::System.Decimal totalPrice, global::System.Int32 state)
        {
            Orders orders = new Orders();
            orders.Id = id;
            orders.OrderDate = orderDate;
            orders.UserId = userId;
            orders.TotalPrice = totalPrice;
            orders.state = state;
            return orders;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private global::System.Decimal _TotalPrice;
        partial void OnTotalPriceChanging(global::System.Decimal value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.Int32 _state;
        partial void OnstateChanging(global::System.Int32 value);
        partial void OnstateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_OrderBook_Order", "OrderBook")]
        public EntityCollection<OrderBook> OrderBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderBook>("Model.FK_OrderBook_Order", "OrderBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderBook>("Model.FK_OrderBook_Order", "OrderBook", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Order_User", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Order_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Order_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.FK_Order_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("Model.FK_Order_User", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Publishers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publishers : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Publishers 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Publishers CreatePublishers(global::System.Int32 id, global::System.String name)
        {
            Publishers publishers = new Publishers();
            publishers.Id = id;
            publishers.Name = name;
            return publishers;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Books_Publishers", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("Model.FK_Books_Publishers", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("Model.FK_Books_Publishers", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ReaderComments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReaderComments : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReaderComments 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="readerName">ReaderName 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="comment">Comment 属性的初始值。</param>
        /// <param name="date">Date 属性的初始值。</param>
        public static ReaderComments CreateReaderComments(global::System.Int32 id, global::System.Int32 bookId, global::System.String readerName, global::System.String title, global::System.String comment, global::System.DateTime date)
        {
            ReaderComments readerComments = new ReaderComments();
            readerComments.Id = id;
            readerComments.BookId = bookId;
            readerComments.ReaderName = readerName;
            readerComments.Title = title;
            readerComments.Comment = comment;
            readerComments.Date = date;
            return readerComments;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReaderName
        {
            get
            {
                return _ReaderName;
            }
            set
            {
                if (_ReaderName != value)
                {
                    OnReaderNameChanging(value);
                    ReportPropertyChanging("ReaderName");
                    _ReaderName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReaderName");
                    OnReaderNameChanged();
                }
            }
        }
        private global::System.String _ReaderName;
        partial void OnReaderNameChanging(global::System.String value);
        partial void OnReaderNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ReaderComment_Book", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_ReaderComment_Book", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_ReaderComment_Book", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.FK_ReaderComment_Book", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("Model.FK_ReaderComment_Book", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Recomment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recomment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Recomment 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="behavierType">BehavierType 属性的初始值。</param>
        /// <param name="behavierWeight">BehavierWeight 属性的初始值。</param>
        /// <param name="createDate">createDate 属性的初始值。</param>
        public static Recomment CreateRecomment(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 itemID, global::System.Int32 behavierType, global::System.Int32 behavierWeight, global::System.DateTime createDate)
        {
            Recomment recomment = new Recomment();
            recomment.Id = id;
            recomment.UserID = userID;
            recomment.ItemID = itemID;
            recomment.BehavierType = behavierType;
            recomment.BehavierWeight = behavierWeight;
            recomment.createDate = createDate;
            return recomment;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BehavierType
        {
            get
            {
                return _BehavierType;
            }
            set
            {
                OnBehavierTypeChanging(value);
                ReportPropertyChanging("BehavierType");
                _BehavierType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BehavierType");
                OnBehavierTypeChanged();
            }
        }
        private global::System.Int32 _BehavierType;
        partial void OnBehavierTypeChanging(global::System.Int32 value);
        partial void OnBehavierTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BehavierWeight
        {
            get
            {
                return _BehavierWeight;
            }
            set
            {
                OnBehavierWeightChanging(value);
                ReportPropertyChanging("BehavierWeight");
                _BehavierWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BehavierWeight");
                OnBehavierWeightChanged();
            }
        }
        private global::System.Int32 _BehavierWeight;
        partial void OnBehavierWeightChanging(global::System.Int32 value);
        partial void OnBehavierWeightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createDate
        {
            get
            {
                return _createDate;
            }
            set
            {
                OncreateDateChanging(value);
                ReportPropertyChanging("createDate");
                _createDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createDate");
                OncreateDateChanged();
            }
        }
        private global::System.DateTime _createDate;
        partial void OncreateDateChanging(global::System.DateTime value);
        partial void OncreateDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_behavierID", "behavier")]
        public behavier behavier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<behavier>("Model.fk_behavierID", "behavier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<behavier>("Model.fk_behavierID", "behavier").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<behavier> behavierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<behavier>("Model.fk_behavierID", "behavier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<behavier>("Model.fk_behavierID", "behavier", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_ItemID", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.fk_ItemID", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.fk_ItemID", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("Model.fk_ItemID", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("Model.fk_ItemID", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_UserID", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.fk_UserID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.fk_UserID", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("Model.fk_UserID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("Model.fk_UserID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SearchKeywords")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchKeywords : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SearchKeywords 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="keyword">Keyword 属性的初始值。</param>
        /// <param name="searchCount">SearchCount 属性的初始值。</param>
        public static SearchKeywords CreateSearchKeywords(global::System.Int32 id, global::System.String keyword, global::System.Int32 searchCount)
        {
            SearchKeywords searchKeywords = new SearchKeywords();
            searchKeywords.Id = id;
            searchKeywords.Keyword = keyword;
            searchKeywords.SearchCount = searchCount;
            return searchKeywords;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchCount
        {
            get
            {
                return _SearchCount;
            }
            set
            {
                OnSearchCountChanging(value);
                ReportPropertyChanging("SearchCount");
                _SearchCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchCount");
                OnSearchCountChanged();
            }
        }
        private global::System.Int32 _SearchCount;
        partial void OnSearchCountChanging(global::System.Int32 value);
        partial void OnSearchCountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRoles : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserRoles 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserRoles CreateUserRoles(global::System.Int32 id, global::System.String name)
        {
            UserRoles userRoles = new UserRoles();
            userRoles.Id = id;
            userRoles.Name = name;
            return userRoles;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Users_Roles", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("Model.FK_Users_Roles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("Model.FK_Users_Roles", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Users 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="loginId">LoginId 属性的初始值。</param>
        /// <param name="loginPwd">LoginPwd 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="address">Address 属性的初始值。</param>
        /// <param name="phone">Phone 属性的初始值。</param>
        /// <param name="mail">Mail 属性的初始值。</param>
        /// <param name="userRoleId">UserRoleId 属性的初始值。</param>
        /// <param name="userStateId">UserStateId 属性的初始值。</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String loginId, global::System.String loginPwd, global::System.String name, global::System.String address, global::System.String phone, global::System.String mail, global::System.Int32 userRoleId, global::System.Int32 userStateId)
        {
            Users users = new Users();
            users.Id = id;
            users.LoginId = loginId;
            users.LoginPwd = loginPwd;
            users.Name = name;
            users.Address = address;
            users.Phone = phone;
            users.Mail = mail;
            users.UserRoleId = userRoleId;
            users.UserStateId = userStateId;
            return users;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginPwd
        {
            get
            {
                return _LoginPwd;
            }
            set
            {
                OnLoginPwdChanging(value);
                ReportPropertyChanging("LoginPwd");
                _LoginPwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginPwd");
                OnLoginPwdChanged();
            }
        }
        private global::System.String _LoginPwd;
        partial void OnLoginPwdChanging(global::System.String value);
        partial void OnLoginPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                OnUserRoleIdChanging(value);
                ReportPropertyChanging("UserRoleId");
                _UserRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRoleId");
                OnUserRoleIdChanged();
            }
        }
        private global::System.Int32 _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserStateId
        {
            get
            {
                return _UserStateId;
            }
            set
            {
                OnUserStateIdChanging(value);
                ReportPropertyChanging("UserStateId");
                _UserStateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserStateId");
                OnUserStateIdChanged();
            }
        }
        private global::System.Int32 _UserStateId;
        partial void OnUserStateIdChanging(global::System.Int32 value);
        partial void OnUserStateIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Cart_Users", "Cart")]
        public EntityCollection<Cart> Cart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("Model.FK_Cart_Users", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("Model.FK_Cart_Users", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Order_User", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("Model.FK_Order_User", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("Model.FK_Order_User", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "fk_UserID", "Recomment")]
        public EntityCollection<Recomment> Recomment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recomment>("Model.fk_UserID", "Recomment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recomment>("Model.fk_UserID", "Recomment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Users_Roles", "UserRoles")]
        public UserRoles UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("Model.FK_Users_Roles", "UserRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("Model.FK_Users_Roles", "UserRoles").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRoles> UserRolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRoles>("Model.FK_Users_Roles", "UserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRoles>("Model.FK_Users_Roles", "UserRoles", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Users_UserStates", "UserStates")]
        public UserStates UserStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStates>("Model.FK_Users_UserStates", "UserStates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStates>("Model.FK_Users_UserStates", "UserStates").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserStates> UserStatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserStates>("Model.FK_Users_UserStates", "UserStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserStates>("Model.FK_Users_UserStates", "UserStates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserStates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserStates : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserStates 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserStates CreateUserStates(global::System.Int32 id, global::System.String name)
        {
            UserStates userStates = new UserStates();
            userStates.Id = id;
            userStates.Name = name;
            return userStates;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Users_UserStates", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("Model.FK_Users_UserStates", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("Model.FK_Users_UserStates", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
